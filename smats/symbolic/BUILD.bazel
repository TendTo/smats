load("//tools:cpplint.bzl", "cpplint")
load("//tools:rules_cc.bzl", "smats_cc_library", "smats_srcs")

package(default_visibility = [
    "//smats:__subpackages__",
    "//tests:__subpackages__",
])

smats_srcs(name = "srcs")

smats_cc_library(
    name = "variable",
    srcs = ["variable.cpp"],
    hdrs = ["variable.h"],
    implementation_deps = ["//smats/util:error"],
    deps = [
        "//smats/util:concepts",
        "//smats/util:hash",
    ],
)

smats_cc_library(
    name = "variables",
    srcs = ["variables.cpp"],
    hdrs = ["variables.h"],
    deps = [
        ":variable",
        "//smats/util:concepts",
        "//smats/util:hash",
    ],
)

smats_cc_library(
    name = "environment",
    srcs = ["environment.cpp"],
    hdrs = ["environment.h"],
    implementation_deps = ["//smats/util:error"],
    deps = [
        ":variable",
        ":variables",
    ],
)

smats_cc_library(
    name = "expression_kind",
    srcs = ["expression_kind.cpp"],
    hdrs = ["expression_kind.h"],
    implementation_deps = ["//smats/util:error"],
)

smats_cc_library(
    name = "expression",
    srcs = [
        "expression.cpp",
        "expression_cell.cpp",
        "expression_cell.h",
        "expression_factory.cpp",
        "expression_factory.h",
    ],
    hdrs = ["expression.h"],
    implementation_deps = ["//smats/util:error"],
    tags = ["no-iwyu"],
    deps = [
        ":environment",
        ":expression_kind",
        ":symbolic_util",
        ":variable",
        ":variables",
        "//smats/util:definitions",
        "//smats/util:hash",
    ],
)

smats_cc_library(
    name = "symbolic_util",
    srcs = ["symbolic_util.cpp"],
    hdrs = ["symbolic_util.h"],
    implementation_deps = ["//smats/util:error"],
)

smats_cc_library(
    name = "expression_visitor",
    srcs = ["expression_visitor.cpp"],
    hdrs = ["expression_visitor.h"],
    implementation_deps = [
        ":expression",
        ":expression_kind",
        "//smats/util:exception",
        "//smats/util:visitor",
    ],
)

smats_cc_library(
    name = "symbolic",
    hdrs = ["symbolic.h"],
    deps = [
        ":environment",
        ":expression",
        ":expression_kind",
        ":variable",
        ":variables",
    ],
)

cpplint()
